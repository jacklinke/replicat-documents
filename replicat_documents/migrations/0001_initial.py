# Generated by Django 3.2.5 on 2021-07-25 02:20

from django.db import migrations, models
import django.db.models.deletion
import replicat_documents.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentIssuerChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='ID for the Document Issuer Choice as an UUID', primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(editable=False, help_text='App which contains this document issuer', max_length=100, verbose_name='Issuer App')),
                ('issuer_module_name', models.CharField(editable=False, help_text='Issuer module name of this document issuer', max_length=100, verbose_name='Issuer Module Name')),
                ('label', models.CharField(editable=False, help_text='The descriptive label for this Document Issuer', max_length=100, unique=True, verbose_name='Label')),
                ('read_only', models.BooleanField(default=False, help_text='Setting to True allows existing documents to be rendered, but disallows creation of new documents with this issuer.', verbose_name='Read Only')),
                ('enabled', models.BooleanField(default=True, editable=False, help_text='If the issuer has been removed, this value will automatically be set to False, preventing creation or rendering of associated documents.', verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'Document Issuer',
                'verbose_name_plural': 'Document Issuers',
                'unique_together': {('app_name', 'issuer_module_name')},
            },
        ),
        migrations.CreateModel(
            name='ReplicatDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='ID for the Document as an UUID', primary_key=True, serialize=False, verbose_name='ID')),
                ('context', replicat_documents.models.PydanticModelField(blank=True, editable=False, help_text="Context used to render the document's template", null=True, verbose_name='Collected context')),
                ('context_query', replicat_documents.models.PydanticModelField(help_text='Context will be fetched from those parameters', verbose_name='Context query parameters')),
                ('metadata', models.JSONField(default=dict, help_text='Metadata in JSON format for the rendered PDF document', verbose_name='Metadata')),
                ('rendered_to_pdf_at', models.DateTimeField(help_text='Date and time at which the document was last rendered as pdf', null=True, verbose_name='Rendered to PDF at')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the document was created', verbose_name='Created on')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the document was last updated', verbose_name='Updated on')),
                ('issuer', models.ForeignKey(blank=True, help_text='The issuer for this document', null=True, on_delete=django.db.models.deletion.SET_NULL, to='replicat_documents.documentissuerchoice', verbose_name='Issuer')),
            ],
            options={
                'verbose_name': 'Replicat Document',
                'verbose_name_plural': 'Replicat Document',
            },
        ),
    ]
